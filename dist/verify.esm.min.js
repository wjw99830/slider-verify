const e=/[^><\/ ]+/,t=new RegExp(`${e.source}="[^"]*"`),n=new RegExp(`${e.source}='[^']*'`),c=new RegExp(`${e.source}`),o=new RegExp(`(${t.source})|(${n.source})|(${c.source})`),s=`<${e.source}( +(${o.source}))* *>`,r=`^\\<(${e.source})`,l=`^</(${e.source})>`,u=/^(<!--(.*?)-->)/;function a(e){e=e.replace(/[\n\r]/g,"").trim();const t=[],n=[];for(;e;){let t,p,h,g;if(g=e.match(u)){const e=new i("comment");e.text=g[2],a(e),c(g[0].length)}else if(h=e.match(new RegExp(r))){const t=h[1];let r=e.match(new RegExp(s))[0].length;const l=e.slice(0,r).replace(t,"").match(new RegExp(o.source,"g")),u=new i(t);l&&(u.attrs=l.map(e=>{let t=e.indexOf("=");return t=t<0?e.length:t,{key:e.slice(0,t).replace(/[:@]/,""),value:e.slice(t+1).replace(/[\"\'"]/g,"")}})),a(u),n.push(u),c(r)}else if(p=e.match(new RegExp(l)))n.pop(),c(p[0].length);else if(t=e.match(new RegExp("^[^<]*"))){const n=e.indexOf("<"),o=new i("text");o.text=t[0],a(o),c(n)}}function c(t){e=e.slice(t)}function a(e){n.length?n[n.length-1].children.push(e):t.push(e)}return t}class i{constructor(e){this.attrs=[],this.children=[],this.tag=e}}const p=e=>{const t=document.createDocumentFragment();for(const n of e)if("text"===n.tag){const e=document.createTextNode(n.text);t.appendChild(e)}else if("comment"===n.tag){const e=document.createComment(n.text);t.appendChild(e)}else{const e=document.createElement(n.tag);for(const t of n.attrs)e.setAttribute(t.key,t.value);e.appendChild(p(n.children)),t.appendChild(e)}return t};function h(e){const t=a(e);return p(t)}export{p as generate,a as parse,h as toDOM};
